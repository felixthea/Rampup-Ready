// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// the compiled file.
//
// WARNING: THE FIRST BLANK LINE MARKS THE END OF WHAT'S TO BE PROCESSED, ANY BLANK LINE SHOULD
// GO AFTER THE REQUIRES BELOW.
//
//= require jquery
//= require jquery_ujs
//= require jquery.ui.draggable
//= require jquery.ui.droppable
//= require underscore-min
//= require_tree .
//= require jquery.serializeJSON.js
//= require pusher.min.js
//= require chosen-jquery

var searchPlaceholder = "What would you like to learn?";

$(document).ready(function(){

  $('.word-search').on('focus', function(event){
    var $inputBox = $(this);

    $inputBox.attr("placeholder", "");
  });

  $('.word-search').on('blur', function(event){
    var $inputBox = $(this);
    $inputBox.val("");
    $inputBox.attr("placeholder", searchPlaceholder);
    setTimeout(function(){
    	$('ul.search-results').html("");
    },200);
  });

  $('.content-main').on('click', '.upvote-arrow', function(event){
  	var definitionId = $(event.target).attr("data-id");

  	$.ajax({
  		url: '/definitions/' + definitionId + '/upvote',
  		type: 'POST',
  		success: function(response){
  			flashNotice("Upvoted!");
  			updateVoteCount(definitionId, response);
  		},
  		error: function(response){
  			flashNotice(response.responseText);
  		}
  	});
  });

  $('.content-main').on('click', '.downvote-arrow', function(event){
  	var definitionId = $(event.target).attr("data-id");

  	$.ajax({
  		url: '/definitions/' + definitionId + '/downvote',
  		type: 'POST',
  		success: function(response){
  			flashNotice("Downvoted!");
  			updateVoteCount(definitionId, response);
  		},
  		error: function(response){
  			flashNotice(response.responseText);
  		}
  	});
  });

  $('.main').on('click', 'button.add-definition', function(event){
  	event.preventDefault();
  	modal = $(this).attr('data-id');
  	openModal(modal);
  });

  $('.container').on('click', 'button.add-word', function(event){
  	event.preventDefault();
  	modal = $(this).attr('data-id');
  	openModal(modal);
  })

  $('.container').on('click', 'button.email-curriculum', function(event){
  	event.preventDefault();
  	modal = $(this).attr('data-id');
  	openModal(modal);
  })

  $('.container').on('click', 'button.add-curriculum', function(event){
    event.preventDefault();
    modal = $(this).attr('data-id');
    openModal(modal);
  })

  $('.cancel').on('click', 'a', function(event){
  	event.preventDefault();
  	var modal = $(this).attr('data-id')
  	clearForm(modal);
  	closeModal(modal);
  });

  $('.add-definition-modal').on('click', '.submit-definition', function(event){
  	event.preventDefault();
  	$modal = $('.add-definition-modal');
  	$lastDef = $('.definition').last();

  	wordId = $modal.attr("data-id");
  	definitionBody = $modal.find('textarea#definition_body').val();
  	definitionExample = $modal.find('textarea#example_body').val();
  	definitionTags = $modal.find('select#definition_tag_ids').val();
  	subdivisionId = $modal.find('select#subdivision_id').val();

  	$.ajax({
  		url: '/definitions',
  		type: 'POST',
  		data: { word_id: wordId, definition_body: definitionBody, definition_example: { body: definitionExample }, definition_tags: definitionTags, subdivision_id: subdivisionId },
  		success: function(data, status, jqxhr){
  			$lastDef.after(data);
  			closeModal('add-definition-modal');
  			clearForm('add-definition-modal');
  		},
  		error: function(jqxhr, status, error){
  			console.log(jqxhr);
  			console.log(status);
  			console.log(error);
  		}
  	})
  })

	$('.add-word-modal').on('click', '.submit-word', function(event){
		event.preventDefault();
		$modal = $('.add-word-modal');

		wordName = $modal.find('input#word_name').val();
		definitionBody = $modal.find('textarea#definition_body').val();
		definitionExample = $modal.find('textarea#example_body').val();
		definitionTags = $modal.find('select#definition_tag_ids').val();
  	subdivisionId = $modal.find('select#subdivision_id').val();

  	$.ajax({
  		url: '/words',
  		type: 'POST',
  		data: {
  			word_name: wordName,
  			definition_body: definitionBody,
  			definition_example: {
  				body: definitionExample
  			},
  			definition_tags: definitionTags,
  			subdivision_id: subdivisionId
  		},
  		success: function(data, status, jqxhr){
  			closeModal('add-word-modal');
  			clearForm('add-word-modal');
  			window.location.href = '/words/' + data;
  		},
  		error: function(jqxhr, status, error){
  		}
  	})
	})

	$('.email-curriculum-modal').on('click', '.email-curriculum', function(event){
		event.preventDefault();
		$modal = $('.email-curriculum-modal');

		emailEmails = $modal.find('input#email_emails').val();
		emailBody = $modal.find('textarea#email_body').val();
		curriculumId = $('#curriculum-id').attr("data-id");

		$.ajax({
			url: '/curriculums/' + curriculumId + '/email',
			type: 'POST',
			data: {
				email_addresses: emailEmails,
				email_body: emailBody,
				curriculum_id: curriculumId
			},
			success: function(data, status, jqxhr){
				closeModal('email-curriculum-modal');
				clearForm('email-curriculum-modal');
			},
			error: function(jqxhr, status, error){
	  		console.log(jqxhr);
  			console.log(status);
  			console.log(error);		
			}
		})
	})

  var closeModal = function(modalClass){
  	$('.' + modalClass).addClass('hidden');
  };

  var openModal = function(modalClass){
  	$('.' + modalClass).removeClass('hidden');
  };

  var clearForm = function(modalClass) {
  	$modal = $('.'+ modalClass)
  	$modal.find('textarea').val('');
  	$modal.find('input').val('');
  	$modal.find("option:selected").removeAttr("selected");
  	$modal.find('select').trigger('chosen:updated');
  	console.log('cleared ' + modalClass);
  };

  var updateVoteCount = function (definitionId, response) {
    var total = response.total
    var upvotes = response.upvotes
    var downvotes = response.downvotes
    $('div#' + definitionId).find('#total-score').html(total);
  };

  var flashNotice = function (msg) {
  	console.log(msg);
  };

  $('#definition_tag_ids').chosen({
  	width: "100%"
	});

	$('#subdivision_id').chosen({
		width: "100%"
	});

	$('.search-bar').on('keyup', 'input', function(event){
		var searchTerm = $(this).val();
		if (searchTerm.length > 2) {
			search(searchTerm, function(result){
				$('ul.search-results').html("");
				_.each(result, function(el, idx, list){
					$('ul.search-results').append('<li><a href="/words/' + el.id + '">' + el.name + '</a></li>');
				})
			})
		} else if ((searchTerm.length === 0) && (event.charCode === 0)){
			$('ul.search-results').html("");
		}
	})

	$('#curriculum_search').on('keyup', function(event){
		var searchTerm = $(this).val();
		if (searchTerm.length > 2){
			search(searchTerm, function(result){
				$('ul.curriculum-search-results').html("");
				_.each(result, function(el, idx, list){
          _.each(el.definitions, function(definition){
            $('ul.curriculum-search-results').addClass('search-results-with-overflow');
            $('ul.curriculum-search-results').append('<li class="curriculum-search-result group" data-id="' + definition.id + '">' 
              + '<div class="curr-sr-info"><div class="curr-sr-word">' + el.name + '</div>'
              + '<div class="curr-sr-definition">' + definition.body + '</div>'
              + '</div>'
              + '<div class="add-to-curriculum"><button class="add-to-curriculum" data-id="' + definition.id + '">Add</button>' + '</div>' 
              + '</li>'
            );
          })
				})
			})
		} else if ((searchTerm.length === 0) && (event.charCode === 0)){
      $('ul.curriculum-search-results').removeClass('search-results-with-overflow');
			$('ul.curriculum-search-results').html("");
		}
	});

	var search = function(keyword, callback){
		$.ajax({
			url: '/search',
			type: 'post',
			data: { keyword: keyword },
			success: function(data, textStatus, jqXHR){
				callback(data.results)
			},
			error: function() {
				console.log("error")
			}
		})
	};
});